#!/bin/bash

#
# lxc: linux Container library

# Authors:
# Daniel Lezcano <daniel.lezcano@free.fr>

# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.

# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

#
# This script allows to set or remove the capabilities on the lxc tools.
# When the capabilities are set, a non root user can manage the containers.
#

usage() {
    echo "usage: $0 -n <name> [-f]"
    echo "  -f: if a container is running, stop it first.  Default is to abort"
}

if [ "$(id -u)" != "0" ]; then
   echo "This command has to be run as root"
   exit 1
fi

shortoptions='n:f'
longoptions='name:'
localstatedir=@LOCALSTATEDIR@
lxc_path=@LXCPATH@
force=0

getopt=$(getopt -o $shortoptions --longoptions  $longoptions -- "$@")
if [ $? != 0 ]; then
    usage $0
    exit 1;
fi

eval set -- "$getopt"

while true; do
        case "$1" in
	    -n|--name)
		shift
		lxc_name=$1
		shift
		;;
	    -f)
		force=1
		shift
		;;
            --)
		shift
		break;;
            *)
		echo $1
		usage $0
		exit 1
		;;
        esac
done

if [ -z "$lxc_name" ]; then
    echo "no container name specified"
    usage $0
    exit 1
fi

if [ ! -d "$lxc_path/$lxc_name" ]; then
    echo "'$lxc_name' does not exist"
    exit 1
fi

# make sure the container isn't running
lxc-info -n $lxc_name 2>/dev/null | grep -q RUNNING
if [ $? -eq 0 ]; then
	if [ $force -eq 1 ]; then
		lxc-stop -n $lxc_name
	else
		echo "Container $lxc_name is running, aborting the deletion."
		exit 1
	fi
fi

# Deduce the type of rootfs
# If LVM partition, destroy it.  If anything else, ignore it.  We'll support
# deletion of others later.
rootdev=`grep lxc.rootfs $lxc_path/$lxc_name/config 2>/dev/null | sed -e 's/^[^/]*/\//'`
if [ ! -z "$rootdev" ]; then
	if [ -b "$rootdev" -o -h "$rootdev" ]; then
		lvdisplay $rootdev > /dev/null 2>&1
		if [ $? -eq 0 ]; then
			echo "removing backing store: $rootdev"
			lvremove -f $rootdev
		fi
	fi
fi
# recursively remove the container to remove old container configuration
rm -rf --one-file-system --preserve-root $lxc_path/$lxc_name
