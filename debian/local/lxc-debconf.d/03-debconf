#!/bin/sh

set -e

# FIXME: this whole mess should be simplified at some point

. /usr/share/debconf/confmodule

Distribution ()
{
	db_get linux-container/distribution
	_DISTRIBUTION="${RET}" # select

	if [ -z "${_DISTRIBUTION}" ]
	then
		case "${_MODE}" in
			debian)
				db_subst linux-container/distribution CHOICES "Debian GNU/Linux 5.0 \"lenny\", Debian GNU/Linux 6.0 \"squeeze\", Debian GNU/Linux 7.0 \"wheezy\", Debian GNU/Linux unstable/sid"
				db_subst linux-container/distribution CHOICES_C "lenny, squeeze, wheezy, sid"
				;;

			progress)
				db_subst linux-container/distribution CHOICES "Progress Linux 1.0 (artax), Progress Linux 1.9 (artax-backports), Progress Linux 2.0 (baureo)"
				db_subst linux-container/distribution CHOICES_C "artax, artax-backports, baureo"
				;;
		esac

		db_settitle linux-container/title
		db_input high linux-container/distribution || true
		db_go

		db_get linux-container/distribution
		_DISTRIBUTION="${RET}" # select
	fi

	echo "_DISTRIBUTION=\"${_DISTRIBUTION}\"" >> "${_TMPDIR}/debconf.default"
	export _DISTRIBUTION
}

Parent_distribution ()
{
	db_get linux-container/parent-distribution
	_PARENT_DISTRIBUTION="${RET}"

	if [ -z "${_PARENT_DISTRIBUTION}" ]
	then
		case "${_MODE}" in
			progress)
				case "${_DISTRIBUTION}" in
					artax*)
						_PARENT_DISTRIBUTION="squeeze"
						;;

					baureo*)
						_PARENT_DISTRIBUTION="sid"
						;;
				esac
				;;

			*)
				_PARENT_DISTRIBUTION="${_DISTRIBUTION}"
				;;
		esac
	fi

	echo "_PARENT_DISTRIBUTION=\"${_PARENT_DISTRIBUTION}\"" >> "${_TMPDIR}/debconf.default"
	export _PARENT_DISTRIBUTION
}

Mirror ()
{
	db_get linux-container/mirror
	_MIRROR="${RET}"

	if [ -z "${_MIRROR}" ]
	then
		case "${_MODE}" in
			debian)

				db_set linux-container/mirror http://ftp.debian.org/debian/
				db_fset linux-container/mirror seen false
				;;

			progress)

				db_set linux-container/mirror http://archive.progress-linux.org/progress/
				db_fset linux-container/mirror seen false
				;;
		esac

		db_settitle linux-container/title
		db_input high linux-container/mirror || true
		db_go

		db_get linux-container/mirror
		_MIRROR="${RET}" # string (w/o empty)

		if [ -z "${_MIRROR}" ]
		then
			case "${_MODE}" in
				debian)
					_MIRROR="http://ftp.debian.org/debian/"
					;;

				progress)
					_MIRROR="http://archive.progress-linux.org/progress/"
					;;
			esac
		fi
	fi

	echo "_MIRROR=\"${_MIRROR}\"" >> "${_TMPDIR}/debconf.default"
	export _MIRROR
}

Mirror_security ()
{
	db_get linux-container/mirror-security
	_MIRROR_SECURITY="${RET}" # string (w/o empty)

	if [ -z "${_MIRROR_SECURITY}" ]
	then
		case "${_MODE}" in
			debian)
				db_set linux-container/mirror-security http://security.debian.org/
				db_fset linux-container/mirror-security seen false
				;;

			progress)
				db_set linux-container/mirror-security http://archive.progress-linux.org/progress/
				db_fset linux-container/mirror-security seen false
				;;
		esac

		db_settitle linux-container/title
		db_input high linux-container/mirror-security || true
		db_go

		db_get linux-container/mirror-security
		_MIRROR_SECURITY="${RET}" # string (w/o empty)

		if [ -z "${_MIRROR_SECURITY}" ]
		then
			case "${_MODE}" in
				debian)
					_MIRROR_SECURITY="http://security.debian.org/"
					;;

				progress)
					_MIRROR_SECURITY="http://archive.progress-linux.org/progress/"
					;;
			esac
		fi
	fi

	echo "_MIRROR_SECURITY=\"${_MIRROR_SECURITY}\"" >> "${_TMPDIR}/debconf.default"
	export _MIRROR_SECURITY
}

Mirror_volatile ()
{
	db_get linux-container/mirror-volatile
	_MIRROR_VOLATILE="${RET}" # string (w/o empty)

	if [ -z "${_MIRROR_VOLATILE}" ]
	then
		case "${_MODE}" in
			debian)
				case "${_DISTRIBUTION}" in
					lenny)
						db_set linux-container/mirror-volatile http://volatile.debian.org/debian-volatile/
						db_fset linux-container/mirror-volatile seen false
						;;

					*)
						db_set linux-container/mirror-volatile http://ftp.debian.org/debian/
						db_fset linux-container/mirror-volatile seen false
						;;
				esac
				;;

			progress)
				db_set linux-container/mirror-volatile http://archive.progress-linux.org/progress/
				db_fset linux-container/mirror-volatile seen false
				;;
		esac

		db_settitle linux-container/title
		db_input high linux-container/mirror-volatile || true
		db_go

		db_get linux-container/mirror-volatile
		_MIRROR_VOLATILE="${RET}" # string (w/o empty)

		if [ -z "${_MIRROR_VOLATILE}" ]
		then
			case "${_MODE}" in
				debian)
					case "${_DISTRIBUTION}" in
						lenny)
							_MIRROR_VOLATILE="http://volatile.debian.org/debian-volatile/"
							;;

						*)
							_MIRROR_VOLATILE="http://ftp.debian.org/debian/"
							;;
					esac
					;;

				progress)
					_MIRROR_VOLATILE="http://archive.progress-linux.org/progress/"
					;;
			esac
		fi
	fi

	echo "_MIRROR_VOLATILE=\"${_MIRROR_VOLATILE}\"" >> "${_TMPDIR}/debconf.default"
	export _MIRROR_VOLATILE
}

Mirror_backports ()
{
	db_get linux-container/mirror-backports
	_MIRROR_BACKPORTS="${RET}" # string (w/o empty)

	if [ -z "${_MIRROR_BACKPORTS}" ]
	then
		case "${_MODE}" in
			debian)
				db_set linux-container/mirror-backports http://backports.debian.org/debian-backports/
				db_fset linux-container/mirror-backports seen false
				;;

			progress)
				db_set linux-container/mirror-backports http://archive.progress-linux.org/progress/
				db_fset linux-container/mirror-backports seen false
				;;
		esac

		db_settitle linux-container/title
		db_input high linux-container/mirror-backports || true
		db_go

		db_get linux-container/mirror-backports
		_MIRROR_BACKPORTS="${RET}" # string (w/o empty)

		if [ -z "${_MIRROR_BACKPORTS}" ]
		then
			case "${_MODE}" in
				debian)
					_MIRROR_BACKPORTS="http://backports.debian.org/debian-backports/"
					;;

				progress)
					_MIRROR_BACKPORTS="http://archive.progress-linux.org/progress/"
					;;
			esac
		fi
	fi

	echo "_MIRROR_BACKPORTS=\"${_MIRROR_BACKPORTS}\"" >> "${_TMPDIR}/debconf.default"
	export _MIRROR_BACKPORTS
}

Parent_mirror ()
{
	db_get linux-container/parent-mirror
	_PARENT_MIRROR="${RET}" # string (w/o empty)

	if [ -z "${_PARENT_MIRROR}" ]
	then
		case "${_MODE}" in
			progress)
				db_set linux-container/parent-mirror http://ftp.debian.org/debian/
				db_fset linux-container/parent-mirror seen false

				db_settitle linux-container/title
				db_input high linux-container/parent-mirror || true
				db_go
				;;

			*)
				db_set linux-container/parent-mirror ${_MIRROR}
				db_fset linux-container/parent-mirror seen true
				;;

		esac

		db_get linux-container/parent-mirror
		_PARENT_MIRROR="${RET}" # string (w/o empty)

		if [ -z "${_PARENT_MIRROR}" ]
		then
			case "${_MODE}" in
				progress)
					_PARENT_MIRROR="http://archive.progress-linux.org/progress/"
					;;

				*)
					_PARENT_MIRROR="${_MIRROR}"
					;;
			esac
		fi
	fi

	echo "_PARENT_MIRROR=\"${_PARENT_MIRROR}\"" >> "${_TMPDIR}/debconf.default"
	export _PARENT_MIRROR
}

Parent_mirror_security ()
{
	db_get linux-container/parent-mirror-security
	_PARENT_MIRROR_SECURITY="${RET}" # string (w/o empty)

	if [ -z "${_PARENT_MIRROR_SECURITY}" ]
	then
		case "${_MODE}" in
			progress)
				db_set linux-container/parent-mirror-security http://security.debian.org/
				db_fset linux-container/parent-mirror-security seen false

				db_settitle linux-container/title
				db_input high linux-container/parent-mirror-security || true
				db_go
				;;

			*)
				db_set linux-container/parent-mirror-security ${_MIRROR_SECURITY}
				db_fset linux-container/parent-mirror-security seen true
				;;
		esac

		db_get linux-container/parent-mirror-security
		_PARENT_MIRROR_SECURITY="${RET}" # string (w/o empty)

		if [ -z "${_PARENT_MIRROR_SECURITY}" ]
		then
			case "${_MODE}" in
				progress)
					_PARENT_MIRROR_SECURITY="http://archive.progress-linux.org/progress/"
					;;

				*)
					_PARENT_MIRROR_SECURITY="${_MIRROR_SECURITY}"
					;;
			esac
		fi
	fi

	echo "_PARENT_MIRROR_SECURITY=\"${_PARENT_MIRROR_SECURITY}\"" >> "${_TMPDIR}/debconf.default"
	export _PARENT_MIRROR_SECURITY
}

Parent_mirror_volatile ()
{
	db_get linux-container/parent-mirror-volatile
	_PARENT_MIRROR_VOLATILE="${RET}" # string (w/o empty)

	if [ -z "${_PARENT_MIRROR_VOLATILE}" ]
	then
		case "${_MODE}" in
			progress)
				db_set linux-container/parent-mirror-volatile http://ftp.debian.org/debian/
				db_fset linux-container/parent-mirror-volatile seen false

				db_settitle linux-container/title
				db_input high linux-container/parent-mirror-volatile || true
				db_go
				;;

			*)
				db_set linux-container/parent-mirror-volatile ${_MIRROR_VOLATILE}
				db_fset linux-container/parent-mirror-volatile seen true
				;;
		esac

		db_get linux-container/parent-mirror-volatile
		_PARENT_MIRROR_VOLATILE="${RET}" # string (w/o empty)

		if [ -z "${_PARENT_MIRROR_VOLATILE}" ]
		then
			case "${_MODE}" in
				progress)
					_PARENT_MIRROR_VOLATILE="http://archive.progress-linux.org/progress/"
					;;

				*)
					_PARENT_MIRROR_VOLATILE="${_MIRROR_VOLATILE}"
					;;
			esac
		fi
	fi

	echo "_PARENT_MIRROR_VOLATILE=\"${_PARENT_MIRROR_VOLATILE}\"" >> "${_TMPDIR}/debconf.default"
	export _PARENT_MIRROR_VOLATILE
}

Parent_mirror_backports ()
{
	db_get linux-container/parent-mirror-backports
	_PARENT_MIRROR_BACKPORTS="${RET}" # string (w/o empty)

	if [ -z "${_PARENT_MIRROR_BACKPORTS}" ]
	then
		case "${_MODE}" in
			progress)
				db_set linux-container/parent-mirror-backports http://backports.debian.org/debian-backports/
				db_fset linux-container/parent-mirror-backports seen false

				db_settitle linux-container/title
				db_input high linux-container/parent-mirror-backports || true
				db_go
				;;

			*)
				db_set linux-container/parent-mirror-backports ${_MIRROR_BACKPORTS}
				db_fset linux-container/parent-mirror-backports seen true
				;;
		esac

		db_get linux-container/parent-mirror-backports
		_PARENT_MIRROR_BACKPORTS="${RET}" # string (w/o empty)

		if [ -z "${_PARENT_MIRROR_BACKPORTS}" ]
		then
			case "${_MODE}" in
				progress)
					_PARENT_MIRROR_BACKPORTS="http://archive.progress-linux.org/progress/"
					;;

				*)
					_PARENT_MIRROR_BACKPORTS="${_MIRROR_BACKPORTS}"
					;;
			esac
		fi
	fi

	echo "_PARENT_MIRROR_BACKPORTS=\"${_PARENT_MIRROR_BACKPORTS}\"" >> "${_TMPDIR}/debconf.default"
	export _PARENT_MIRROR_BACKPORTS
}

Packages ()
{
	db_get linux-container/packages
	_PACKAGES="${RET}" # string (w/ empty)

	if [ -z "${_PACKAGES}" ]
	then
		db_settitle linux-container/title
		db_input high linux-container/packages || true
		db_go

		db_get linux-container/packages
		_PACKAGES="${RET}" # string (w/ empty)
	fi

	echo "_PACKAGES=\"${_PACKAGES}\"" >> "${_TMPDIR}/debconf.default"
	export _PACKAGES
}

Local_repositories ()
{
	_NUMBER="0"

	while db_get linux-container/local${_NUMBER}/repository && [ "${RET}" ]
	do
		mkdir -p "${_TMPDIR}/sources.list.d"

		_REPOSITORY="${RET#deb }"

		_LIST="local${_NUMBER}.list"
		if db_get linux-container/local${_NUMBER}/list
		then
			_LIST="$(basename ${RET} .list).list"
		fi

		_COMMENT=""
		if db_get linux-container/local${_NUMBER}/comment
		then
			_COMMENT="${RET}"

			echo "## ${_COMMENT}" > "${_TMPDIR}/sources.list.d/${_LIST}"
		fi

		echo "deb ${_REPOSITORY}" >> "${_TMPDIR}/sources.list.d/${_LIST}"

		if db_get linux-container/local${_NUMBER}/source && [ "$RET" = true ]
		then
			echo "deb-src ${_REPOSITORY}" >> "${_TMPDIR}/sources.list.d/${_LIST}"
		fi

		_KEY=""
		if db_get linux-container/local${_NUMBER}/key
		then
			_KEY="${RET}"

			wget -q "${_KEY}" -O "${_TMPDIR}/sources.list.d/$(basename ${_LIST} .list).key"
		fi

		_NUMBER="$((${_NUMBER} + 1))"
	done
}

Root_password ()
{
	if db_get passwd/root-password
	then
		_ROOT_PASSWORD="${RET}" # string (w/o empty)
	fi

	if [ -z "${_ROOT_PASSWORD}" ]
	then
		# Create a random password as suggestion for the user
		_RANDOM_PASSWORD="$(dd if=/dev/urandom bs=6 count=1 2> /dev/null | base64)"

		db_set passwd/root-password ${_RANDOM_PASSWORD}
		db_fset passwd/root-password seen false

		db_settitle linux-container/title
		db_input high passwd/root-password || true
		db_go

		db_get passwd/root-password
		_ROOT_PASSWORD="${RET}"

		if [ -z "${_ROOT_PASSWORD}" ]
		then
			# User did set not set a password, falling back to random password
			_ROOT_PASSWORD="${_RANDOM_PASSWORD}"

			echo "_ROOT_RANDOM_PASSWORD=\"true\"" >> "${_TMPDIR}/debconf.default"
		fi
	fi

	echo "_ROOT_PASSWORD=\"${_ROOT_PASSWORD}\"" >> "${_TMPDIR}/debconf.default"
}

Network ()
{
	_NUMBER="0"

	while db_get linux-container/eth${_NUMBER}/dhcp && [ "${RET}" ]
	do
		if db_get linux-container/eth${_NUMBER}/bridge
		then
			eval LINUX_CONTAINER_ETH${_NUMBER}_BRIDGE="${RET}" # string (w/o empty)
		fi

		if db_get linux-container/eth${_NUMBER}/mac
		then
			eval LINUX_CONTAINER_ETH${_NUMBER}_MAC="${RET}" # string (w/o empty)
		fi

		_NUMBER="$((${_NUMBER} + 1))"
	done

	# FIXME: this is ugly
	if [ "${_NUMBER}" -gt 0 ]
	then
		LINUX_CONTAINER_ETH_NUMBER="$((${_NUMBER} - 1))"
	else
		LINUX_CONTAINER_ETH_NUMBER="${_NUMBER}"
	fi

	if [ -z ${LINUX_CONTAINER_ETH0_BRIDGE} ]
	then
		# FIXME: do guess the default bridge device
		db_set linux-container/eth0/bridge br0
		db_fset linux-container/eth0/bridge seen false

		db_settitle linux-container/title
		db_input high linux-container/eth0/bridge || true
		db_go

		db_get linux-container/eth0/bridge
		LINUX_CONTAINER_ETH0_BRIDGE="${RET:-br0}"
	fi

	if [ -z "${LINUX_CONTAINER_ETH0_MAC}" ]
	then
		# FIXME: do guess the default mac address
		db_set linux-container/eth0/mac br0
		db_fset linux-container/eth0/mac seen false

		db_settitle linux-container/title
		db_input high linux-container/eth0/mac || true
		db_go

		db_get linux-container/eth0/mac
		LINUX_CONTAINER_ETH0_MAC="${RET:-00:FF:00:00:00:01}"
	fi

	echo "LINUX_CONTAINER_ETH_NUMBER=\"${LINUX_CONTAINER_ETH_NUMBER}\"" >> "${_TMPDIR}/debconf.default"

	for _NUMBER in $(seq 0 ${LINUX_CONTAINER_ETH_NUMBER})
	do
		eval _BRIDGE="$`echo LINUX_CONTAINER_ETH${_NUMBER}_BRIDGE`"
		echo "LINUX_CONTAINER_ETH${_NUMBER}_BRIDGE=\"${_BRIDGE}\"" >> "${_TMPDIR}/debconf.default"

		eval _MAC="$`echo LINUX_CONTAINER_ETH${_NUMBER}_MAC`"
		echo "LINUX_CONTAINER_ETH${_NUMBER}_MAC=\"${_MAC}\"" >> "${_TMPDIR}/debconf.default"
	done
}

Internal_options ()
{
	db_get linux-container/apt-recommends
	_APT_RECOMMENDS="${RET}" # boolean (w/ empty)
	echo "_APT_RECOMMENDS=\"${_APT_RECOMMENDS}\"" >> "${_TMPDIR}/debconf.default"

	db_get linux-container/debconf-frontend
	_DEBCONF_FRONTEND="${RET:-Dialog}" # select
	echo "_DEBCONF_FRONTEND=\"${_DEBCONF_FRONTEND}\"" >> "${_TMPDIR}/debconf.default"

	db_get linux-container/debconf-priority
	_DEBCONF_PRIORITY="${RET:-high}" # select
	echo "_DEBCONF_PRIORITY=\"${_DEBCONF_PRIORITY}\"" >> "${_TMPDIR}/debconf.default"
}

Distribution
Parent_distribution

Mirror
Mirror_security
Mirror_volatile
Mirror_backports

Parent_mirror
Parent_mirror_security
Parent_mirror_volatile
Parent_mirror_backports

Packages

Local_repositories

Root_password
Network

Internal_options

db_stop
